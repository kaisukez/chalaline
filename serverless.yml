# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: chalaline-serverless-lambda

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  profile: chalaline
  runtime: nodejs8.10
  stage: dev
  region: ap-southeast-1
  environment:
    STORE_TABLE: Store
    PRODUCT_TABLE: Product
    REGION: ap-southeast-1

# The `functions` block defines what code to deploy
functions:
  helloWorld:
    handler: handler.helloWorld
    # The `events` block defines how to trigger the handler.helloWorld code
    events:
      - http:
          path: hello-world
          method: get
          cors: true

  createBranch:
    handler: branch/createBranch.createBranch
    events:
      - http:
          path: create-branch
          method: post
          cors: true
  removeBranch:
    handler: branch/removeBranch.removeBranch
    events:
      - http:
          path: remove-branch
          method: post
          cors: true
  listAllBranch:
    handler: branch/listAllBranch.listAllBranch
    events:
      - http:
          path: list-all-branch
          method: post
          cors: true

  addProductToDatabase:
    handler: products/addProductToDatabase.addProductToDatabase
    events:
      - http:
          path: add-product-to-database
          method: post
          cors: true
  addProductToStock:
    handler: products/addProductToStock.addProductToStock
    events:
      - http:
          path: add-product-to-stock
          method: post
          cors: true
  listProductsInDatabase:
    handler: products/listProductsInDatabase.listProductsInDatabase
    events:
      - http:
          path: listProductInDatabase
          method: get
          cors: true
  listProductsInStock:
    handler: products/listProductsInStock.listProductsInStock
    events:
      - http:
          path: listProductInDatabase
          method: post
          cors: true
  listPublishedProducts:
    handler: products/listPublishedProducts.listPublishedProducts
    events:
      - http:
          path: list-published-products
          method: get
          cors: true

  registerAsAdmin:
    handler: users/registerAsAdmin.registerAsAdmin
    events:
      - http:
          path: register-as-admin
          method: post
          cors: true
  addStaff:
    handler: users/addStaff.addStaff
    events:
      - http:
          path: add-staff
          method: post
          cors: true
  listStaffs:
    handler: users/listStaffs.listStaffs
    events:
      - http:
          path: list-staffs
          method: get
          cors: true

plugins:
  - serverless-offline

# resources:
#   Resources:
#     StoreTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: Store
#         AttributeDefinitions:
#           - AttributeName: storeName
#             AttributeType: S
#           - AttributeName: branchName
#             AttributeType: S
#         KeySchema:
#           - AttributeName: storeName
#             KeyType: HASH
#           - AttributeName: branchName
#             KeyType: RANGE
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
#     ProductTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: Product
#         AttributeDefinitions:
#           - AttributeName: productID
#             AttributeType: S
#         KeySchema:
#           - AttributeName: productID
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
